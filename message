{
  "previous": "%PglzpRsqN4AeE7WlwdawYysF4V0TBUdAxHdxdPi+hcM=.sha256",
  "author": "@+oaWWDs8g73EZFUMfW37R/ULtFEjwKN/DczvdYihjbU=.ed25519",
  "sequence": 5855,
  "timestamp": 1539104683400,
  "hash": "sha256",
  "content": {
    "type": "post",
    "root": "%g3hPVPDEO1Aj/uPl0+J2NlhFB2bbFLIHlty+YuqFZ3w=.sha256",
    "branch": "%YvWX4aBXcOmDXoXxQfiRIA8EmR1dL8K1NGm0ujNwH4U=.sha256",
    "text": "[@mix](@ye+QM09iPcDJD6YvQYjoQc7sLF/IFhmNbEqgdzQo3lQ=.ed25519) :heart: :heart: :heart: Maybe an optional (but encourage) `&type=chess_move` or something might be helpful here? I'd *love* to have all sorts of small SSB apps to handle different types of messages.\n\n---\n\nOn another note, I found something *really* cool: https://tools.ietf.org/html/rfc6920\n\n> **Naming Things with Hashes**\n>   This document defines a set of ways to identify a thing (a digital\n   object in this case) using the output from a hash function.  It\n   specifies a new URI scheme for this purpose, a way to map these to\n   HTTP URLs, and binary and human-speakable formats for these names.\n   The various formats are designed to support, but not require, a\n   strong link to the referenced object, such that the referenced object\n   may be authenticated to the same degree as the reference to it.  The\n   reason for this work is to standardise current uses of hash outputs\n   in URLs and to support new information-centric applications and other\n   uses of hash outputs in protocols.",
    "mentions": [
      {
        "link": "@ye+QM09iPcDJD6YvQYjoQc7sLF/IFhmNbEqgdzQo3lQ=.ed25519",
        "name": "mix"
      }
    ]
  },
  "signature": "vE0b0pV0Lb6d5/3oXDoq4OAib5jHlsh+Sd1k5VyrlOqhrhvVWA8m5jYmHM2uiRUsP3pRJALb1vLwSh4HzoClAg==.sig.ed25519"
}