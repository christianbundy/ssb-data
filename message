{
  "previous": "%51IL+NhaRKKehkvzz3qsS4GjTcJmNdw64sFE1L85VdM=.sha256",
  "author": "@+oaWWDs8g73EZFUMfW37R/ULtFEjwKN/DczvdYihjbU=.ed25519",
  "sequence": 8872,
  "timestamp": 1549668372846,
  "hash": "sha256",
  "content": {
    "type": "post",
    "root": "%OoBqCtaYm6ayBQqCVlHi66vsWfvaK5+t98aqsXlRyZU=.sha256",
    "branch": "%owMDNQHphPw/IRCaLJ6YZtwUsEtGBMME6jqb9dgRC90=.sha256",
    "reply": {
      "%OoBqCtaYm6ayBQqCVlHi66vsWfvaK5+t98aqsXlRyZU=.sha256": "@+oaWWDs8g73EZFUMfW37R/ULtFEjwKN/DczvdYihjbU=.ed25519",
      "%owMDNQHphPw/IRCaLJ6YZtwUsEtGBMME6jqb9dgRC90=.sha256": "@YXkE3TikkY4GFMX3lzXUllRkNTbj5E+604AkaO1xbz8=.ed25519"
    },
    "channel": "ssb-server",
    "recps": null,
    "text": "![video:itsworking.mp4](&yEjoEuS9rkbp9tKqTPNwZnnXRSUMfxyNWTK2Y+W0NkY=.sha256)\n\nI had a brief conversation with [@dominic](@EMovhfIrFk4NihAKnRNhrfRaqIhBv1Wj8pTxJNgvCCY=.ed25519) where he walked me through how he'd go about implementing deletion. My implementation was *mostly* on the right track, but the gist is that I was messing around with [this sort of nonsense](https://github.com/flumedb/flumelog-offset/blob/write-delete/frame/recoverable.js#L77-L171) instead of just [filtering out deleted items before returning](https://github.com/flumedb/flumelog-offset/blob/del/inject.js#L80).\n\nAs far as I can tell **it's working**, but it requires changes to:\n\n- aligned-block-file\n- flumelog-offset\n- flumeview-level\n- flumeview-reduce ([TODO](https://github.com/flumedb/flumeview-reduce/issues/10))\n- flumedb\n- ssb-db\n- ssb-server\n\nI'm thinking that the best way to go about this is probably starting with the leafs of the dependency tree, bubbling my way up from there:\n\n![dependency tree graphviz dot png](&SdfqZzliEPY6kDe6dYdUmuboT+21UmyVgDxFjM13rww=.sha256)\n\nMost of this work took a few iterations so I'm sure I'll need some cleanup, but I think we're close. Once this is done then we can [teach flumeviews to delete single items](https://github.com/fraction/flumeview-flumelog-array/blob/master/index.js#L43) so that we can avoid resource-intensive rebuilds, but that's still on the horizon.",
    "mentions": [
      {
        "link": "&yEjoEuS9rkbp9tKqTPNwZnnXRSUMfxyNWTK2Y+W0NkY=.sha256",
        "name": "video:itsworking.mp4",
        "type": "video/mp4",
        "size": 712027
      },
      {
        "link": "@EMovhfIrFk4NihAKnRNhrfRaqIhBv1Wj8pTxJNgvCCY=.ed25519",
        "name": "dominic"
      },
      {
        "link": "&SdfqZzliEPY6kDe6dYdUmuboT+21UmyVgDxFjM13rww=.sha256",
        "name": "dependency tree graphviz dot png",
        "type": "image/png",
        "size": 53603
      }
    ]
  },
  "signature": "Q+Ra/jmFkpuxBxHvnFimaz+vugElLVkGmx7QUMVT0fVsW62+X74JnjzM/Br8vKa5Nbed2nHOsUrc0S40IXotDw==.sig.ed25519"
}