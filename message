{
  "previous": "%W7OD5DYND9r4qQAKeWo33rdsXeTE7tr8p9Wq89abp/4=.sha256",
  "sequence": 15674,
  "author": "@+oaWWDs8g73EZFUMfW37R/ULtFEjwKN/DczvdYihjbU=.ed25519",
  "timestamp": 1582140474923,
  "hash": "sha256",
  "content": {
    "type": "post",
    "text": "[@SoapDog](@gaQw6z30GpfsW9k8V5ED4pHrg8zmrqku24zTSAINhRg=.ed25519)\r\n\r\nHow long are queries taking on your machine? I like using #hyperfine for benchmarks, here's an example:\r\n\r\n| Command | Mean [ms] | Min [ms] | Max [ms] | Relative |\r\n|:---|---:|---:|---:|---:|\r\n| `curl http://localhost:4515/public/latest` | 581.2 Â± 57.3 | 530.1 | 716.0 | 1.00 |\r\n\r\nThe only one that should be taking a long time is the \"popular posts this year\" because it has to pore through tons of messages, but my point is that if we just do all these queries when Oasis starts then it should take no time because the data is already queued in the background. The problems is that when we get new data from the stream, we might need to remove old data from the previously cached value, and there doesn't seem to be an easy way to do that.\r\n\r\nThe best I've got is:\r\n\r\n- Start a stream of the old messages and add them to a list.\r\n- Start a stream of new messages, and when one comes in put it on top of the list and remove the oldest message from the list.\r\n\r\nIt's super performant, but it's ugly and not very ergonomic for developers who have to work with it. It also gets pretty hairy when you're looking at complex queries like the popular page that have to count votes and sort and do all sorts of nonsense.",
    "mentions": [
      {
        "link": "@gaQw6z30GpfsW9k8V5ED4pHrg8zmrqku24zTSAINhRg=.ed25519",
        "name": "SoapDog"
      },
      {
        "link": "#hyperfine"
      }
    ],
    "root": "%vlTFH5qXDmW5q6YoXwLHqKsOhncG2McnV1njDCtaGe8=.sha256",
    "branch": [
      "%42wSlG0LA1oc9KoLv4cavciMwhrORMmirD6DVAMHCaY=.sha256"
    ]
  },
  "signature": "51Ab15RqIwIl3mir+8sE14mMwEsU7tecW1w7SEJv0tVudSVIh0YPpKwCALQIA5HKBqhLYFidO2++CklLANc2Bw==.sig.ed25519"
}