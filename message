{
  "previous": "%NA8e0OU/w2hNmwQKtevEzrsgSzLRHIiF3I1VDsTxTvk=.sha256",
  "sequence": 17550,
  "author": "@+oaWWDs8g73EZFUMfW37R/ULtFEjwKN/DczvdYihjbU=.ed25519",
  "timestamp": 1589565619330,
  "hash": "sha256",
  "content": {
    "type": "post",
    "text": "Making small SSB implementations from scratch is actually really fun. It's frustrating when the crypto doesn't work, but it's *so* satisfying when you see a new message replicate.\r\n\r\nI've made three implementations so far (two Node.js, one Deno) and it's kinda neat to mix and match the parts.\r\n\r\nIt's also been a great learning experience: I didn't realize that Ed25519 depends on SHA512, which means that we use **two** hash algorithms under the hood.\r\n\r\nI think my next implementation will probably follow advice from [@cryptix](@p13zSAiOpguI9nsawkGijsnMfWmFd5rlUNpzekEE+vI=.ed25519) and to try libsodium next. It's convenient to be able to use either the standard library or a minimal implementation that does only what I need, but having a big toolbox with everything you need has its advantages too. :)\r\n\r\n#nodejs #deno #ssb #crypto #libsodium",
    "mentions": [
      {
        "link": "@p13zSAiOpguI9nsawkGijsnMfWmFd5rlUNpzekEE+vI=.ed25519",
        "name": "cryptix"
      },
      {
        "link": "#nodejs"
      },
      {
        "link": "#deno"
      },
      {
        "link": "#ssb"
      },
      {
        "link": "#crypto"
      },
      {
        "link": "#libsodium"
      }
    ]
  },
  "signature": "QdNyDz0dsbRumqob0M7JDWEITCz02hN27K7RkGaFq8rNPvOs5v/mLjDBCjjZ7TTZn+atEsz5AtWOAyWewBuQAg==.sig.ed25519"
}