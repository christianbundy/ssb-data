{
  "previous": "%tspWgaBJ0OlhN9ZJwUjvFiW8r7F8HNEsUhkb+2i+R6c=.sha256",
  "author": "@+oaWWDs8g73EZFUMfW37R/ULtFEjwKN/DczvdYihjbU=.ed25519",
  "sequence": 4688,
  "timestamp": 1536811320602,
  "hash": "sha256",
  "content": {
    "type": "post",
    "text": "I'm finally digging into the code behind the *actual* secure-scuttlebutt package, and I wanted to play around with the unboxing to deeper understand how things are working. I want to try changing out the [`_unbox`](https://github.com/ssbc/secure-scuttlebutt/blob/beff8d063a20a1604ffe9110eb0d0f0911fc2e95/minimal.js#L10) for **an asynchronous unboxing function** with a callback.\n\nI've been banging my head against this for a couple of hours, but it seems like I'd need to re-plumb *all* of the functions to take callbacks and such, which eventually needs to be passed off as a [codec](https://github.com/ssbc/secure-scuttlebutt/blob/beff8d063a20a1604ffe9110eb0d0f0911fc2e95/minimal.js#L68) to [flumelog-offset](https://github.com/ssbc/secure-scuttlebutt/blob/beff8d063a20a1604ffe9110eb0d0f0911fc2e95/minimal.js#L74). Do pull-streams solve this sort of problem, or is that just adding another layer of complexity?\n\nThis *seems* like a place where loose coupling might be helpful as we experiment with new algorithms in the future, but I'm not sure I'm going about this the right way.",
    "channel": "ssb-learning"
  },
  "signature": "iPxp9z/Cx6GBEEB3AAywj9dIy/3HlM6b8uD7TttJPmBaAnMrZF4OHA5MqgBpkAE0kVJSdmOOT09k7zDfCpntDw==.sig.ed25519"
}