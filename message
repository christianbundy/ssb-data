{
  "previous": "%Z0NrmvutXtcCfuSVSL2OtGCdyryO/uZt2hpupsgunAg=.sha256",
  "sequence": 15518,
  "author": "@+oaWWDs8g73EZFUMfW37R/ULtFEjwKN/DczvdYihjbU=.ed25519",
  "timestamp": 1581968640904,
  "hash": "sha256",
  "content": {
    "type": "post",
    "text": "Improved script:\r\n\r\n```javascript\r\nconst GitHub = require(\"github-api\");\r\n\r\nconst token = \"redacted\";\r\nconst gh = new GitHub({ token });\r\nconst i = gh.getIssues(\"fraction\", \"oasis\");\r\n\r\ni.listIssues().then(issues =>\r\n  Promise.all(issues.data.map(issue => i.listIssueComments(issue.number))).then(\r\n    issues => {\r\n      const users = issues.reduce((acc, cur) => {\r\n        cur.data.forEach(comment => {\r\n          const user = comment.user.login;\r\n          if (acc.includes(user) === false) {\r\n            acc.push(user);\r\n          }\r\n        });\r\n\r\n        return acc;\r\n      }, []);\r\n\r\n      const markdownList = users\r\n        .sort()\r\n        .map(name => `- ${name}`)\r\n        .join(\"\\n\");\r\n\r\n      console.log(markdownList);\r\n    }\r\n  )\r\n);\r\n```\r\n\r\nIn the future this should also snag comments on pull requests...",
    "mentions": [],
    "root": "%Mk8vXj+idX+aoexbp+YfDjSYsyvpKV2OATAhku5in5w=.sha256",
    "branch": [
      "%Mk8vXj+idX+aoexbp+YfDjSYsyvpKV2OATAhku5in5w=.sha256"
    ]
  },
  "signature": "kjqZITgi8/r4lHHshAKOSyR40lSCeZATCkntzw3F/ipeNdt4JOLj/R1XeqDCbiuvdYn7mUjF78+6eW6fWoioAw==.sig.ed25519"
}