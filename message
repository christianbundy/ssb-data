{
  "previous": "%/JLpqEv+9Hl5KoDXcC4TOUgex6XZZ4/N2DB1P87nMAs=.sha256",
  "sequence": 18152,
  "author": "@+oaWWDs8g73EZFUMfW37R/ULtFEjwKN/DczvdYihjbU=.ed25519",
  "timestamp": 1592591704869,
  "hash": "sha256",
  "content": {
    "type": "post",
    "text": "I guess maybe the way to do this would be to write your API as if all you had was a filesystem, and *then* write mappings to other protocols (HTTP, FTP, SSH, gRPC, etc) where you translate the various filesystem behavior to the new interface.\r\n\r\nI think the main pain point would be how you translate ambiguous behavior to a given protocol. For example, reading the contents of a directory is easy in FTP, but how do you do it in HTTP? Do you return an HTML page? How is it formatted? How do you do weird stuff like 'rename'?\r\n\r\nIt's interesting to notice that HTTP is pretty bare-bones, even compared to a filesystem, so you have to spend lots of time building *on top* of it rather than *with it*.",
    "mentions": [],
    "root": "%nGmxudQXGp1rZxBY3FqzAzCYzuvuudAXbWhLHS+2skA=.sha256",
    "branch": [
      "%/JLpqEv+9Hl5KoDXcC4TOUgex6XZZ4/N2DB1P87nMAs=.sha256"
    ]
  },
  "signature": "AufO50YLTWzNg8jHQou+dplRyHRg0C4RKkp7gxdBh5c4IM0udZ6oE5vjOOQK7BIREBqobsFW0Cpt0MpihQqCDg==.sig.ed25519"
}