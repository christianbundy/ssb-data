{
  "previous": "%yJzo6Z8/hx/YqXasi6FR/9ctYWqgeki4cBt5zs/vW3I=.sha256",
  "sequence": 17676,
  "author": "@+oaWWDs8g73EZFUMfW37R/ULtFEjwKN/DczvdYihjbU=.ed25519",
  "timestamp": 1590464295265,
  "hash": "sha256",
  "content": {
    "type": "post",
    "text": "[@Daan](@MRiJ+CvDnD9ZjqunY1oy6tsk0IdbMDC4Q3tTC8riS3s=.ed25519)\r\n\r\nYes! This is beautiful, thanks for writing code to export from FlumeDB! I'm unreasonably excited that you were able to write to HTTP-SSB. Hopefully it's easy to port that to Python too... ðŸ™ƒ I should probably make a less crappy API first, the current one is pretty janky and under-specified.\r\n\r\nRE: Deletion -- tombstones would be great, but since FlumeDB supports arbitrary data we can't do \"THIS ENTRY HAS BEEN DELETED\" because that's a valid entry that could be in the database. Because there's no way to record metadata (!), an entry with all zeroes is the magical \"deleted\" value. It's a hack, but I couldn't figure out anything better without breaking backward-compat with the existing encoding format.\r\n\r\n",
    "mentions": [
      {
        "link": "@MRiJ+CvDnD9ZjqunY1oy6tsk0IdbMDC4Q3tTC8riS3s=.ed25519",
        "name": "Daan"
      }
    ],
    "root": "%t3X1D+zI++QbdA7qWxUTsAoubLe5ExYtYDrEjZcHuF0=.sha256",
    "branch": [
      "%CSPRYYFBfBTGFn+rCRSZrr8rWi91anKEgdf9NOllLxY=.sha256"
    ]
  },
  "signature": "0NvZzXVkZ80u9YK64xvYyusQvRN5WYjS4/PYMTGfnHBVefg3dBirsWsswpP0WlFLz1SWX8L6pvBFNEuuDvy7Aw==.sig.ed25519"
}